(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

/**
 * @author bigggge
 *
 * https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLMediaElement
 *
 * @description Media Event
 * @link https://developer.mozilla.org/zh-CN/docs/Web/Guide/Events/Media_events
 *
 */

!function () {

    // template
    var audioHtml = '\n        <div class="player">\n            <div class="player-cover">\n                <div class="player-cover-wrapper">\n                    <img class="player-cover-img">\n                </div>\n            </div>\n\n            <div class="player-main">\n                <div class="player-info">\n                    <span class="player-title"></span>\n                    <span class="player-author"></span>\n                    <span class="player-loading">loading...</span>\n                </div>\n\n                <div class="player-controller">\n                    <span class="togglePlay icon-play2"></span>\n                </div>\n\n                <div class="player-bottom-bar">\n                    <div class="time-bar">\n                        <div class="total-time-bar"><span class="played-time-bar"></span></div>\n                    </div>\n                    <span class="time-text">\n                <span class="played-time">00:00</span> / <span class="total-time">3:00</span>\n            </span>\n                    <span class="player-volume-icon icon-volume-medium"></span>\n                    <div class="player-volume-bar">\n                        <div class="total-volume-bar"><span class="current-volume-bar"></span></div>\n                    </div>\n                </div>\n            </div>\n            <div class="player-list">\n                <ol class="music-list"></ol>\n            </div>\n        </div>';

    function MPlayer(options) {
        this.options = options;
        this.init();
    }

    MPlayer.prototype.init = function () {

        var options = this.options;
        this.el = document.getElementById(options.el);
        var autoPlay = options.autoplay;

        this.musicList = options.music;
        this.currentMusic = this.musicList[0];

        this.el.innerHTML = audioHtml;

        // DOM
        var el = this.el;
        this.togglePlayEl = el.getElementsByClassName('togglePlay')[0];
        this.titleEl = el.getElementsByClassName('player-title')[0];
        this.authorEl = el.getElementsByClassName('player-author')[0];
        this.loadingEl = el.getElementsByClassName('player-loading')[0];
        // time bar
        this.timeBarEl = el.getElementsByClassName('time-bar')[0];
        this.totalTimeEl = el.getElementsByClassName('total-time')[0];
        this.playedTimeEl = el.getElementsByClassName('played-time')[0];
        this.playerCoverEl = el.getElementsByClassName('player-cover-img')[0];
        this.persentPlayedEl = el.getElementsByClassName('played-time-bar')[0];
        // volume
        this.playerVolumeEl = el.getElementsByClassName('player-volume-icon')[0];
        this.volumeBarEl = el.getElementsByClassName('player-volume-bar')[0];
        this.totalVolumeEl = el.getElementsByClassName('total-volume-bar')[0];
        this.currentVolumeEl = el.getElementsByClassName('current-volume-bar')[0];
        // music list
        this.playerListEl = el.getElementsByClassName('player-list')[0];
        this.musicListEl = el.getElementsByClassName('music-list')[0];

        // generate music list
        var html = '';
        for (var i = 0; i < this.musicList.length; i++) {
            html += '<li class="music-item">' + this.musicList[i].title + ' <span class="music-author">' + this.musicList[i].author + '</span></li>';
        }
        this.musicListEl.innerHTML = html;

        // set music
        this.audio = document.createElement('audio');
        this.setMusic(false);

        // add event listener
        this._addEventListener();

        // auto play
        autoPlay && this.toggle();
    };

    /**
     * play or pause
     */
    MPlayer.prototype.toggle = function (forcePlay) {
        if (forcePlay || this.audio.paused) {
            this.togglePlayEl.className = 'togglePlay icon-pause';
            this.audio.play();
            this.currentVolumeEl.style.height = this.audio.volume * 100 + '%';
        } else {
            this.togglePlayEl.className = 'togglePlay icon-play2';
            this.audio.pause();
        }
    };

    /**
     * set music
     */
    MPlayer.prototype.setMusic = function (forcePlay) {
        this.loadingEl.innerHTML = 'loading...';
        // song
        this.audio.src = this.currentMusic.src;
        // song cover
        this.playerCoverEl.src = this.currentMusic.cover;
        // song title
        this.titleEl.innerHTML = this.currentMusic.title;
        // song author
        this.authorEl.innerHTML = this.currentMusic.author;
        forcePlay && this.toggle(forcePlay);
    };

    MPlayer.prototype._addEventListener = function () {
        var _this = this;

        // play or pause
        this.togglePlayEl.addEventListener('click', function () {
            _this.toggle();
        });

        // total time
        this.audio.addEventListener('durationchange', function () {
            _this.totalTimeEl.innerHTML = secondToTime(_this.audio.duration);
        });

        // can play
        this.audio.addEventListener('canplaythrough', function () {
            _this.loadingEl.innerHTML = '';
        });

        // music end
        this.audio.addEventListener('ended', function () {
            _this.togglePlayEl.className = 'togglePlay icon-play2';
        });

        // time update
        this.audio.addEventListener('timeupdate', function () {
            _this.playedTimeEl.innerHTML = secondToTime(_this.audio.currentTime);
            _this.persentPlayedEl.style.width = _this.audio.currentTime / _this.audio.duration * 100 + '%';
        });

        // error listener
        this.audio.addEventListener('error', function () {
            _this.loadingEl.classList.add('error');
            _this.loadingEl.innerHTML = '加载失败 T^T';
        });

        // progress bar
        this.timeBarEl.addEventListener('click', function (e) {
            var event = e || window.event;
            var timeBarWidth = _this.timeBarEl.clientWidth;
            var rect = _this.timeBarEl.getBoundingClientRect();
            var viewLeft = rect.left;
            var percentage = ((event.clientX - viewLeft) / timeBarWidth).toFixed(2);

            _this.persentPlayedEl.style.width = percentage * 100 + '%';
            _this.audio.currentTime = percentage * _this.audio.duration;
            _this.playedTimeEl.innerHTML = secondToTime(_this.audio.currentTime);
        });

        // volume
        this.playerVolumeEl.addEventListener('click', function (e) {
            if (_this.audio.muted) {
                _this.audio.muted = false;
                _this.playerVolumeEl.className = 'player-volume-icon icon-volume-medium';
                _this.currentVolumeEl.style.height = '100%';
            } else {
                _this.audio.muted = true;
                _this.playerVolumeEl.className = 'player-volume-icon icon-volume-mute2';
                _this.currentVolumeEl.style.height = '0%';
            }
        });

        this.volumeBarEl.addEventListener('click', function (e) {
            var event = e || window.event;
            var volumeBarHeight = _this.volumeBarEl.clientHeight;
            var rect = _this.volumeBarEl.getBoundingClientRect();
            var viewTop = rect.top;
            var percentage = 1 - ((event.clientY - viewTop) / volumeBarHeight).toFixed(2);

            _this.currentVolumeEl.style.height = percentage * 100 + '%';
            _this.audio.volume = percentage;
        });

        // show or hide music list
        this.playerCoverEl.addEventListener('click', function () {
            _this.playerListEl.style.display = _this.playerListEl.style.display === 'block' ? 'none' : 'block';
            // let classList = this.playerListEl.classList;
            // if (classList.contains('hidden')) {
            //     classList.remove('hidden');
            //     requestAnimationFrame(function () {
            //         classList.remove('visually-hidden');
            //     });
            // } else {
            //     classList.add('visually-hidden');
            //     this.playerListEl.addEventListener('transitionend', (e) => {
            //         classList.add('hidden');
            //     });
            // }
        });

        // music list
        this.musicListEl.addEventListener('click', function (e) {
            if (e.target && e.target.nodeName === "LI") {
                var node = e.target;
                var index = [].indexOf.call(node.parentNode.children, node);
                _this.currentMusic = _this.musicList[index];
                _this.setMusic(true);
            }
        });
    };

    /**
     * second to 00:00
     *
     * @param second
     * @return {string}
     */
    function secondToTime(second) {
        var min = second / 60 | 0;
        var sec = second % 60 | 0;
        var add0min = min < 10 ? '0' + min : min;
        var add0sec = sec < 10 ? '0' + sec : sec;
        return add0min + ':' + add0sec;
    }

    window.MPlayer = MPlayer;
}();

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,
